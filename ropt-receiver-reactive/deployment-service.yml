---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ropt-receiver-reactive
  namespace: ropt
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: ropt-receiver-reactive
  template:
    metadata:
      name: ropt-receiver-reactive-pod
      labels:
        app: ropt-receiver-reactive
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/actuator/prometheus"
    spec:
      containers:
        - name: ropt-receiver-reactive-container
          image: vladstep/ropt-receiver-reactive:{{ropt-image-tag}}
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
              initialDelaySeconds: 30
              periodSeconds: 10
              timeoutSeconds: 2
              failureThreshold: 1
              successThreshold: 1
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
              initialDelaySeconds: 30
              periodSeconds: 10
              timeoutSeconds: 2
              failureThreshold: 1
              successThreshold: 1
---
apiVersion: v1
kind: Service
metadata:
  name: ropt-receiver-reactive-cip-svc
  labels:
    app: ropt-receiver-reactive
spec:
  selector:
    app: ropt-receiver-reactive
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: ropt-receiver-reactive-svc
  labels:
    app: ropt-receiver-reactive
spec:
  selector:
    app: ropt-receiver-reactive
  type: LoadBalancer
  ports:
    - port: 8083
      targetPort: 8080